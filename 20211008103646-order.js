module.exports = {
  up: (queryInterface, DataTypes) => queryInterface.createTable('order', {
    id: {
      allowNull: false,
      autoIncrement: true,
      primaryKey: true,
      type: DataTypes.INTEGER,
    },
    public_id: { type: DataTypes.UUID, unique: true, allowNull: false },
    number: {
      type: "text generated always as ('FIN/NPS/' || id::text) stored",
      allowNull: false,
    },
    user_id: { type: DataTypes.UUID, index: true, allowNull: false },
    partner_id: { type: DataTypes.UUID, allowNull: false },
    product_id: { type: DataTypes.UUID, allowNull: false },
    response: { type: DataTypes.JSON },
    serial_number: { type: DataTypes.INTEGER },
    reg_receipt_sequence_number: { type: DataTypes.STRING },
    partner: { type: DataTypes.JSONB, allowNull: false },
    product: { type: DataTypes.JSONB, allowNull: false },
    other_details: { type: DataTypes.JSON },
    basic_info: { type: DataTypes.JSONB },
    documents: { type: DataTypes.ARRAY(DataTypes.JSONB) },
    kyc_details: { type: DataTypes.JSONB },
    bank_account: { type: DataTypes.JSONB },
    nominees: { type: DataTypes.ARRAY(DataTypes.JSONB) },
    account_type: {
      type: DataTypes.STRING,
      index: true,
      enum: [ 'tier-one', 'tier-two' ],
    },
    plan_type: { type: DataTypes.STRING, defaultValue: 'auto' },
    combined_form_flag: { type: DataTypes.BOOLEAN, defaultValue: false },
    life_cycle_fund_type: {
      type: DataTypes.STRING,
      defaultValue: 'aggressive',
    },
    tier_one_active_plan_scheme: { type: DataTypes.ARRAY(DataTypes.JSON) },
    tier_two_active_plan_scheme: { type: DataTypes.ARRAY(DataTypes.JSON) },
    scheme_preference_details: { type: DataTypes.JSON },
    investment_details: { type: DataTypes.JSON },
    status: {
      type: DataTypes.STRING,
      index: true,
      defaultValue: 'initiated',
      ENUM: [ 'initiated', 'created', 'payment-initiated', 'payment-pending', 'payment-success', 'payment-failed',
        'submitted', 'document-upload', 'failed', 'rejected', 'cancelled', 'issued' ],
    },
    created_by: { type: DataTypes.UUID },
    updated_by: { type: DataTypes.UUID },
    created_at: {
      allowNull: false,
      type: DataTypes.DATE,
      defaultValue: DataTypes.NOW,
    },
    updated_at: {
      allowNull: false,
      type: DataTypes.DATE,
      defaultValue: DataTypes.NOW,
    },
  }),
  down: (queryInterface) => queryInterface.dropTable('order'),
};
